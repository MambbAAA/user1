#7
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
from sklearn.model_selection import train_test_split
data = load_iris()
print("\n IRIS FEATURES TARGET NAMES: \n ", data.target_names)
for i in range(len(data.target_names)):
    print("\n[{0}]:[{1}]".format(i, data.target_names[i]))
print("\n IRIS DATA :\n",data["data"])
X_train, X_test, y_train, y_test = train_test_split(data["data"],data["target"])
print("\n Target :\n",data["target"])
print("\n X TRAIN \n", X_train)
print("\n X TEST \n", X_test)
print("\n Y TRAIN \n", y_train)
print("\n Y TEST \n", y_test)
kn = KNeighborsClassifier(n_neighbors=5)
kn.fit(X_train, y_train)
x_new = np.array([[5, 2.9, 1, 0.2]])
print("\n XNEW \n", x_new)
prediction = kn.predict(x_new)
print("\n Predicted target value: {}\n".format(prediction))
print("\n Predicted feature name: {}\n".format(data["target_names"]))
for i in range(len(X_test)):
    x = X_test[i]
    x_new = np.array([x])
    prediction = kn.predict(x_new)
    print("\n Actual : {0} {1}, Predicted :{2}{3}".format(y_test[i], data.target_names[y_test[i]], 
                                                         prediction, data.target_names[prediction[0]]))

print("\n TEST SCORE[ACCURACY]: {:.2f}\n".format(kn.score(X_test, y_test)))
